<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PFGlobalObjects</name>
    </assembly>
    <members>
        <member name="T:AppGlobals.AppInfo">
            <summary>
            Class contains properties that retrieve information on the currently executing assembly.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyCompany">
            <summary>
            Gets the company name custom attribute from the assembly manifest.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyCopyright">
            <summary>
            Get the copyright custom attribute from the assembly manifest.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyCulture">
            <summary>
            Specifies which culture the assembly supports.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyDescription">
            <summary>
            Gets the text description for the assembly.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyName">
            <summary>
            Describes an assembly's unique identity in full.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyProduct">
            <summary>
            Gets the product name custom attribute from the assembly manifest.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyTitle">
            <summary>
            Gets the description for the assembly.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyTrademark">
            <summary>
            Gets the trademark custom attribute from the assembly manifest.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyVersion">
            <summary>
            Gets the version in string format of the assembly from the manifest.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.AssemblyVersionEx">
            <summary>
            Gets the version as a Version object of the assembly from the manifest.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.CurrentExecutingAssemblyDirectory">
            <summary>
            Retrieves local directory path of the currently executing assembly.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.CurrentExecutingAssembly">
            <summary>
            Retrieves local path of the currently executing assembly.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.CurrentEntryAssemblyDirectory">
            <summary>
            Retrieves local directory path of the currently entry assembly.
            </summary>
        </member>
        <member name="P:AppGlobals.AppInfo.CurrentEntryAssembly">
            <summary>
            Retrieves local path of the currently entry assembly.
            </summary>
        </member>
        <member name="T:AppGlobals.ConsoleMessages">
            <summary>
            Class that console applications can use for displaying application messages and logging events to text and windows logs.
            </summary>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayAlertMessage(System.String)">
            <summary>
            Output alert type message.
            </summary>
            <param name="message">Text of message to output</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayAlertMessage(System.String,System.Boolean)">
            <summary>
            Output alert type message.
            </summary>
            <param name="message">Text of message to output</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayAlertMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Output alert type message.
            </summary>
            <param name="message">Text of message to output</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
            <param name="writeToEventLog">If true, then message will be copied to the windows application event log.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayErrorMessage(System.Exception)">
            <summary>
            Output error type message.
            </summary>
            <param name="ex">Exception that triggered the error message.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayErrorMessage(System.String)">
            <summary>
            Output error type message.
            </summary>
            <param name="message">Text of message to output</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayErrorMessage(System.Exception,System.Boolean)">
            <summary>
            Output error type message.
            </summary>
            <param name="ex">Exception that triggered the error message.</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayErrorMessage(System.String,System.Boolean)">
            <summary>
            Output error type message.
            </summary>
            <param name="message">Text of message to output</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayErrorMessage(System.Exception,System.Boolean,System.Boolean)">
            <summary>
            Output error type message.
            </summary>
            <param name="pEx">Exception that triggered the error message.</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
            <param name="writeToEventLog">If true, then message will be copied to the windows application event log.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayErrorMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Output error type message.
            </summary>
            <param name="message">Text of message to output</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
            <param name="writeToEventLog">If true, then message will be copied to the windows application event log.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayInfoMessage(System.String)">
            <summary>
            Output information type message.
            </summary>
            <param name="message">Text of message to output.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayInfoMessage(System.String,System.Boolean)">
            <summary>
            Output information type message.
            </summary>
            <param name="message">Text of message to output.</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayInfoMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Output information type message.
            </summary>
            <param name="message">Text of message to output.</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
            <param name="writeToEventLog">If true, then message will be copied to the windows application event log.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayMessage(System.String,AppGlobals.ConsoleMessages.pfConsoleMessageType)">
            <summary>
            Output message of specified type.
            </summary>
            <param name="message">Text of message to output.</param>
            <param name="messageType">Use pfConsoleMessageType enumeration to specify type of message to output.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayMessage(System.String,AppGlobals.ConsoleMessages.pfConsoleMessageType,System.Boolean)">
            <summary>
            Output message of specified type.
            </summary>
            <param name="message">Text of message to output.</param>
            <param name="messageType">Use pfConsoleMessageType enumeration to specify type of message to output.</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayMessage(System.String,AppGlobals.ConsoleMessages.pfConsoleMessageType,System.Boolean,System.Boolean)">
            <summary>
            Outputs message to console.
            </summary>
            <param name="message">Text of message to output.</param>
            <param name="messageType">Message Level: Information, Warning, Error, Alert.</param>
            <param name="writeToAppLog">Copy messaage to the app log.</param>
            <param name="writeToEventLog">Copy message to the windows application event log.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayWarningMessage(System.String)">
            <summary>
            Output warning type message.
            </summary>
            <param name="message">Text of message to output</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayWarningMessage(System.String,System.Boolean)">
            <summary>
            Output warning type message.
            </summary>
            <param name="message">Text of message to output</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.DisplayWarningMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Output warning type message.
            </summary>
            <param name="message">Text of message to output</param>
            <param name="writeToAppLog">If true, then message will be copied to the app log file.</param>
            <param name="writeToEventLog">If true, then message will be copied to the windows application event log.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.FormatErrorMessage(System.Exception)">
            <summary>
            Routine to format the contents of an exception object to formatted text message.
            </summary>
            <param name="pex">Exception object to format.</param>
            <returns>Formatted text containing exception information.</returns>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.FormatErrorMessageWithStackTrace(System.Exception)">
            <summary>
            Routine to format the contents of an exception object and the stack trace to a formatted text message.
            </summary>
            <param name="pex">Exception object to format.</param>
            <returns>Formatted text containing exception information and stack trace.</returns>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.WriteToAppLog(System.String)">
            <summary>
            Writes messeage to the app log file.
            </summary>
            <param name="message">Text of the message to output.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.WriteToAppLog(System.String,AppGlobals.ConsoleMessages.pfConsoleMessageType)">
            <summary>
            Writes messeage to the app log file.
            </summary>
            <param name="message">Text of the message to output.</param>
            <param name="messageType">Use pfConsoleMessageType enumeration to specify type of message to output.</param>
        </member>
        <member name="M:AppGlobals.ConsoleMessages.WriteToEventLog(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Outputs specified message text to the windows application event log.
            </summary>
            <param name="message">Text of message to output.</param>
            <param name="messageType">Use EventLogEntryType enumeration to specified the type of the message (Information, Warning, Error, etc.)</param>
        </member>
        <member name="P:AppGlobals.ConsoleMessages.AppLogFilename">
            <summary>
            Full path to file that will contain messages.
            </summary>
        </member>
        <member name="P:AppGlobals.ConsoleMessages.CopyConsoleOutputToAppLog">
            <summary>
            Set to true to copy all console output to the log file.
            </summary>
        </member>
        <member name="P:AppGlobals.ConsoleMessages.DefaultMessageBoxCaption">
            <summary>
            Caption for any message boxes that can be displayed.
            </summary>
        </member>
        <member name="T:AppGlobals.ConsoleMessages.pfConsoleMessageType">
            <summary>
            Enumeration o valid message types for console messages.
            </summary>
        </member>
        <member name="T:AppGlobals.ModelessPopupDialogForm">
            <summary>
            Form for displaying messages.
            </summary>
        </member>
        <member name="F:AppGlobals.ModelessPopupDialogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialogForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialogForm.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="maxSecondsToDisplayPopup">Maximum number of seconds to display the popup form.</param>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialogForm.OnGotFocus(System.EventArgs)">
            <summary>
            Override of Focus to hide the caret in the message textbox.
            </summary>
            <param name="e">Arguments passed to this routine from Widnows.</param>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialogForm.SetFocusToActionButton">
            <summary>
            Move focus to the form's action button.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialogForm.ActionButtonPressed">
            <summary>
            If true, then the form's action button has been pressed.
             Usually, this would be used when action button is defined as a Cancel button
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialogForm.MessageText">
            <summary>
            Text to be displayed on the popup form.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialogForm.ButtonText">
            <summary>
            Specifies the label text for the action button.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialogForm.Timer">
            <summary>
            Get or set the value for the system timer used by this class
            </summary>
        </member>
        <member name="T:AppGlobals.AppMessages">
            <summary>
            Class for managing windows forms application message displays and logging.
            </summary>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayAlertMessage(System.String)">
            <summary>
            Displays alert message on popup form.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayAlertMessage(System.String,System.Boolean)">
            <summary>
            Displays alert message on popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application log file.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayAlertMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Displays alert message on popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <param name="writeToEventLog">If true, message is written to Windows Application Event Log.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayErrorMessage(System.Exception)">
            <summary>
            Displays error message on popup form.
            </summary>
            <param name="ex">Exception object containing message to display.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayErrorMessage(System.String)">
            <summary>
            Displays error message on popup form.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayErrorMessage(System.Exception,System.Boolean)">
            <summary>
            Displays error message on popup form.
            </summary>
            <param name="ex">Exception object containing message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayErrorMessage(System.String,System.Boolean)">
            <summary>
            Displays error message on popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayErrorMessage(System.Exception,System.Boolean,System.Boolean)">
            <summary>
            Displays error message on popup form.
            </summary>
            <param name="pEx">Exception object containing message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <param name="writeToEventLog">If true, message is written to Windows Application Event Log.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayErrorMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Displays error message on popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <param name="writeToEventLog">If true, message is written to Windows Application Event Log.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayInfoMessage(System.String)">
            <summary>
            Displays information message on pop up form.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayInfoMessage(System.String,System.Boolean)">
            <summary>
            Displays information message on pop up form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayInfoMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Displays information message on pop up form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <param name="writeToEventLog">If true, message is written to Windows Application Event Log.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Displays message on a popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Form caption.</param>
            <param name="pButtonType">Type of button.</param>
            <param name="pMessageType">Message type.</param>
            <returns>DialogResult value.</returns>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Boolean)">
            <summary>
            Displays message on a popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Form caption.</param>
            <param name="pButtonType">Type of button.</param>
            <param name="pMessageType">Message type.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <returns>DialogResult value.</returns>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon,System.Boolean,System.Boolean)">
            <summary>
            Displays message on a popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="caption">Form caption.</param>
            <param name="buttonType">Type of button.</param>
            <param name="messageType">Message type.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <param name="writeToEventLog">If true, message is written to Windows Application Event Log.</param>
            <returns>DialogResult value.</returns>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayWarningMessage(System.String)">
            <summary>
            Display warning message on a popup form.
            </summary>
            <param name="message">Message to display.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayWarningMessage(System.String,System.Boolean)">
            <summary>
            Display warning message on a popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.DisplayWarningMessage(System.String,System.Boolean,System.Boolean)">
            <summary>
            Display warning message on a popup form.
            </summary>
            <param name="message">Message to display.</param>
            <param name="writeToAppLog">If true, message is written to the application text log file.</param>
            <param name="writeToEventLog">If true, message is written to Windows Application Event Log.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.FormatErrorMessage(System.Exception)">
            <summary>
            Routine to format contents of an exception object into a string representing the different parts of the error object, including the message.
            </summary>
            <param name="pex">Error object.</param>
            <returns>String with contents of error object formatted.</returns>
        </member>
        <member name="M:AppGlobals.AppMessages.FormatErrorMessageWithStackTrace(System.Exception)">
            <summary>
            Routine to format contents of an exception object into a string representing the different parts of the error object, including the message.
             The message will include information on any InnerException objects represented by the Exception object in the the parameter.
            </summary>
            <param name="pex">Error object.</param>
            <returns>String with contents of error object formatted.</returns>
        </member>
        <member name="M:AppGlobals.AppMessages.WriteToAppLog(System.String)">
            <summary>
            Writes a message to the application text-based log file.
            </summary>
            <param name="message">Message to log.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.WriteToAppLog(System.String,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            Writes a message to the application text-based log file.
            </summary>
            <param name="message">Message to log.</param>
            <param name="messageType">Type of message: Error, warning, or information.</param>
        </member>
        <member name="M:AppGlobals.AppMessages.GetAppLogFilename">
            <summary>
            Get the full path to the current application log file.
            </summary>
            <returns>Full path to the application log file.</returns>
        </member>
        <member name="M:AppGlobals.AppMessages.WriteToEventLog(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes a message to the Windows application event log.
            </summary>
            <param name="message">Message to log.</param>
            <param name="messageType">Type of message: Error, warning, or information.</param>
        </member>
        <member name="P:AppGlobals.AppMessages.AppLogFilename">
            <summary>
            File name for the application  log.
            </summary>
        </member>
        <member name="P:AppGlobals.AppMessages.DefaultMessageBoxCaption">
            <summary>
            Caption to display on message boxes.
            </summary>
        </member>
        <member name="T:AppGlobals.CAppGlobalErrorHandler">
            <summary>
            Class for handling all errors not processed by the application code.
            </summary>
        </member>
        <member name="M:AppGlobals.CAppGlobalErrorHandler.GlobalErrorHandler(System.Object,System.Threading.ThreadExceptionEventArgs)">
            <summary>
            Global error handler that is automatically run if an error is not caught by any application try ... catch routines. You do not typically call this routine directly.
            </summary>
            <param name="sender">Parameter.</param>
            <param name="t">Parameter.</param>
        </member>
        <member name="P:AppGlobals.CAppGlobalErrorHandler.CancelApplicationOnGlobalError">
            <summary>
            Determines whether or not to cancel the application in the event the global error handler is fired by some unexpected error in the app code.
            </summary>
        </member>
        <member name="P:AppGlobals.CAppGlobalErrorHandler.WriteToAppLog">
            <summary>
            If true, then messages will be written to the app log.
            </summary>
        </member>
        <member name="P:AppGlobals.CAppGlobalErrorHandler.WriteToEventLog">
            <summary>
            If true, then messages will be written to the Windows event log.
            </summary>
        </member>
        <member name="T:AppGlobals.CFormsCollection">
            <summary>
            Class defines a collection used to keep track of the forms open in an application. 
            See <see cref="T:AppGlobals.CAppForms"/> class for more information.
            </summary>
        </member>
        <member name="M:AppGlobals.CFormsCollection.Add(System.Windows.Forms.Form)">
            <summary>
            Adds a form to the list of forms.
            </summary>
            <param name="poFormObject">Form to add to the list.</param>
            <returns>Returns poFormObject.</returns>
        </member>
        <member name="M:AppGlobals.CFormsCollection.Remove(System.Windows.Forms.Form)">
            <summary>
            Removes a form from the collection of forms.
            </summary>
            <param name="poFormObject">For to remove.</param>
        </member>
        <member name="T:AppGlobals.CAppForms">
            <summary>
            Class for managing open windows forms. Particular useful for MDI applications. 
            </summary>
        </member>
        <member name="M:AppGlobals.CAppForms.Add(System.Windows.Forms.Form)">
            <summary>
            Adds form to collection that contains this application's forms.
            </summary>
            <param name="winForm">Form object.</param>
            <returns>The winform parameter is returned.</returns>
        </member>
        <member name="M:AppGlobals.CAppForms.CloseAllForms">
            <summary>
            Close all the open forms.
            </summary>
        </member>
        <member name="M:AppGlobals.CAppForms.CloseAllForms(System.Windows.Forms.Form)">
            <summary>
            Closes all the open forms except the form with the current focus.
            </summary>
            <param name="doNotCloseThisForm">Current form that should not be clowed.</param>
        </member>
        <member name="M:AppGlobals.CAppForms.Remove(System.Windows.Forms.Form)">
            <summary>
            Removes form from list of application forms.
            </summary>
            <param name="poForm">Form object to remove.</param>
        </member>
        <member name="P:AppGlobals.CAppForms.Forms">
            <summary>
            Collection containing the forms that are being tracked.
            </summary>
        </member>
        <member name="T:AppGlobals.AppConfig">
            <summary>
            Routines for retrieving values for the current application's configuration file.
            </summary>
        </member>
        <member name="M:AppGlobals.AppConfig.GetConfigValue(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>String value if key found; otherwise an empty string is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetStringValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>String value if key found; otherwise an empty string is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetStringValueFromConfigFile(System.String,System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="psDefaultValue">Value to return if key not found.</param>
            <returns>String value if key found; otherwise an psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetBooleanValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Boolean value defined by the key if key is found; otherwise false is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetBooleanValueFromConfigFile(System.String,System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="psDefaultValue">Value to return if key not found.</param>
            <returns>Boolean value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetIntValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Int value defined by the key if key is found; otherwise 0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetIntValueFromConfigFile(System.String,System.Int32)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Int value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetLongValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Long value defined by the key if key is found; otherwise 0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetLongValueFromConfigFile(System.String,System.Int64)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Long value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetFloatValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Float value defined by the key if key is found; otherwise 0.0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetFloatValueFromConfigFile(System.String,System.Single)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Float value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetDoubleValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Double value defined by the key if key is found; otherwise 0.0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetDoubleValueFromConfigFile(System.String,System.Double)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Double value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetAllAppSettings">
            <summary>
            Retrieves all the app settings in the application configuration file.
            </summary>
            <returns>Collection containing all the application settings defined in the application configuration file.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.GetAllAppSettings(System.String)">
            <summary>
            Retrieves the app settings for the executable specified in the psExecutableFilePath parameter.
            </summary>
            <param name="psExecutableFilePath">Path to executable file.</param>
            <returns>Collection containing all the application settings defined in the application configuration file for the specified executable file.</returns>
        </member>
        <member name="M:AppGlobals.AppConfig.SetConfigValue(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElement">Key/Value pair.</param>
        </member>
        <member name="M:AppGlobals.AppConfig.SetConfigValue(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElements">Array of Key/Value pairs.</param>
        </member>
        <member name="M:AppGlobals.AppConfig.SetConfigValue(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElements">Collection of Key/Value pairs.</param>
        </member>
        <member name="T:AppGlobals.InputBox">
            <summary>
            Class to display an form where text data can be input.
            </summary>
        </member>
        <member name="F:AppGlobals.InputBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:AppGlobals.InputBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:AppGlobals.InputBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:AppGlobals.InputBox.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:AppGlobals.InputBox.#ctor(System.Windows.Forms.Control)">
             <summary>
             Constructor
             </summary>
            <param name="parent">Parent window for the input box.</param>
        </member>
        <member name="M:AppGlobals.InputBox.HideForm">
            <summary>
            Method to hide form.
            </summary>
        </member>
        <member name="M:AppGlobals.InputBox.CloseForm">
            <summary>
            Method to close form.
            </summary>
        </member>
        <member name="P:AppGlobals.InputBox.Caption">
            <summary>
            Caption Property.
            </summary>
        </member>
        <member name="P:AppGlobals.InputBox.InputText">
            <summary>
            InputText Property.
            </summary>
        </member>
        <member name="P:AppGlobals.InputBox.InputTextLabel">
            <summary>
            InputTextLabel Property.
            </summary>
        </member>
        <member name="P:AppGlobals.InputBox.OkButtonText">
            <summary>
            OkButtonText Property.
            </summary>
        </member>
        <member name="P:AppGlobals.InputBox.CancelButtonText">
            <summary>
            CancelButtonText Property.
            </summary>
        </member>
        <member name="T:AppGlobals.AppTextGlobals">
            <summary>
            Class for various string manipulations.
            </summary>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertYesNoToTrueFalse(System.String)">
            <summary>
            Converts a string to a bool value.
            </summary>
            <param name="psYesNo">String to be converted.</param>
            <returns>Bool value.</returns>
            <remarks>Yes or No string value returns true; all other values return false.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToBoolean(System.String)">
            <summary>
            Converts string to a bool value.
            </summary>
            <param name="psValue">Value to be converted.</param>
            <returns>Boolean value.</returns>
            <remarks>Default conversion value if value is not one of following (yes, true, no, false) is false.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToBoolean(System.String,System.String)">
            <summary>
            Converts string to a bool value.
            </summary>
            <param name="psValue">Value to be converted.</param>
            <param name="psDefaultValue">Default conversion value if value is not one of following: yes, true, no, false.</param>
            <returns>Boolean value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToInt(System.String)">
            <summary>
            Converts string to integer.
            </summary>
            <param name="psValue">Value to convert.</param>
            <returns>int value.</returns>
            <remarks>If string cannot be converted (e.g. it is not a number) then 0 is returned.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToInt(System.String,System.Int32)">
            <summary>
            Converts string to integer.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="pnDefaultValue">Value to return if value is not a number.</param>
            <returns>int value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToLong(System.String)">
            <summary>
            Converts string to long.
            </summary>
            <param name="psValue">Value to convert.</param>
            <returns>long value.</returns>
            <remarks>If string cannot be converted (e.g. it is not a number) then 0 is returned.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToLong(System.String,System.Int64)">
            <summary>
            Converts string to long.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="pnDefaultValue">Value to return if value is not a number.</param>
            <returns>long value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToFloat(System.String)">
            <summary>
            Converts string to float.
            </summary>
            <param name="psValue">Value to convert.</param>
            <returns>float value.</returns>
            <remarks>If string cannot be converted (e.g. it is not a number) then 0 is returned.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToFloat(System.String,System.Single)">
            <summary>
            Converts string to float.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="pnDefaultValue">Value to return if value is not a number.</param>
            <returns>float value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToDouble(System.String)">
            <summary>
            Converts string to double.
            </summary>
            <param name="psValue">Value to convert.</param>
            <returns>double value.</returns>
            <remarks>If string cannot be converted (e.g. it is not a number) then 0 is returned.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToDouble(System.String,System.Double)">
            <summary>
            Converts string to double.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="pnDefaultValue">Value to return if value is not a number.</param>
            <returns>double value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToDateTime(System.String,System.String)">
            <summary>
            Converts string to DateTime value.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="psDefaultValue">Value to return if value is not a Date/Time.</param>
            <returns>DateTime value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToDateTime(System.String,System.DateTime)">
            <summary>
            Converts string to DateTime value.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="pdDefaultValue">Value to return if value is not a Date/Time.</param>
            <returns>DateTime value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToTimeSpan(System.String,System.String)">
            <summary>
            Converts string to TimeSpan value.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="psDefaultValue">Value to return if value is not a TimeSpan.</param>
            <returns>TimeSpan value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToTimeSpan(System.String,System.TimeSpan)">
            <summary>
            Converts string to TimeSpan value.
            </summary>
            <param name="psValue">Value to convert.</param>
            <param name="tsDefaultValue">Value to return if value is not a TimeSpan.</param>
            <returns>TimeSpan value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.StringLength(System.String)">
            <summary>
            Gets length of a string.
            </summary>
            <param name="psStringValue">String to measure.</param>
            <returns>Length of string.</returns>
            <remarks>Use this is value could be null or empty string.</remarks>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ReverseString(System.String)">
            <summary>
            Reverses a string.
            </summary>
            <param name="psStringValue">String to reverse.</param>
            <returns>Reversed string.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertStringToByteArray(System.String)">
            <summary>
            Converts string to an array of bytes.
            </summary>
            <param name="str">String to convert.</param>
            <returns>Byte array.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertByteArrayToString(System.Byte[])">
            <summary>
            Converts byte array to a string.
            </summary>
            <param name="bytes">Byte array to convert.</param>
            <returns>String.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.RepeatChar(System.Char,System.Int32)">
            <summary>
            Returns string containing a character repeated the specified number of times.
            </summary>
            <param name="c">Char value to repeat.</param>
            <param name="count">Number of times to repeat the char value.</param>
            <returns>String containing the repeated char value.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertCharArrayToString(System.Char[])">
            <summary>
            Converts char array to a string.
            </summary>
            <param name="chars">char array to convert.</param>
            <returns>String.</returns>
        </member>
        <member name="M:AppGlobals.AppTextGlobals.ConvertCharToString(System.Char)">
            <summary>
            Convert a char value to a string value.
            </summary>
            <param name="ch">char to convert.</param>
            <returns>String.</returns>
        </member>
        <member name="T:AppGlobals.AppConfigExt">
            <summary>
            Routines for retrieving values for an application's configuration file.
            If configuration is for an application different from the calling application, 
            then the calling application must supply the path to the executable for which the configuration items will be read or modified.
            If no file name is supplied, the configuration for the calling application will be managed.
            </summary>
        </member>
        <member name="M:AppGlobals.AppConfigExt.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AppGlobals.AppConfigExt.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="pathToExecutable">Path to executable for which the configuration items will be read or modified.</param>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetConfigValue(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>String value if key found; otherwise an empty string is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetStringValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>String value if key found; otherwise an empty string is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetStringValueFromConfigFile(System.String,System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="psDefaultValue">Value to return if key not found.</param>
            <returns>String value if key found; otherwise an psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetBooleanValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Boolean value defined by the key if key is found; otherwise false is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetBooleanValueFromConfigFile(System.String,System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="psDefaultValue">Value to return if key not found.</param>
            <returns>Boolean value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetIntValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Int value defined by the key if key is found; otherwise 0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetIntValueFromConfigFile(System.String,System.Int32)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Int value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetLongValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Long value defined by the key if key is found; otherwise 0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetLongValueFromConfigFile(System.String,System.Int64)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Long value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetFloatValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Float value defined by the key if key is found; otherwise 0.0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetFloatValueFromConfigFile(System.String,System.Single)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Float value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetDoubleValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Double value defined by the key if key is found; otherwise 0.0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetDoubleValueFromConfigFile(System.String,System.Double)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Double value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetAllAppSettings">
            <summary>
            Retrieves all the app settings in the application configuration file.
            </summary>
            <returns>Collection containing all the application settings defined in the application configuration file.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.GetAllAppSettings(System.String)">
            <summary>
            Retrieves the app settings for the executable specified in the psExecutableFilePath parameter.
            </summary>
            <param name="psExecutableFilePath">Path to executable file.</param>
            <returns>Collection containing all the application settings defined in the application configuration file for the specified executable file.</returns>
        </member>
        <member name="M:AppGlobals.AppConfigExt.SetConfigValue(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElement">Key/Value pair.</param>
        </member>
        <member name="M:AppGlobals.AppConfigExt.SetConfigValue(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElements">Array of Key/Value pairs.</param>
        </member>
        <member name="M:AppGlobals.AppConfigExt.SetConfigValue(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElements">Collection of Key/Value pairs.</param>
        </member>
        <member name="T:AppGlobals.CustomAppConfig">
            <summary>
            Routines for retrieving values for an application's configuration file.
            If configuration is for an application different from the calling application, 
            then the calling application must supply the path to the executable for which the configuration items will be read or modified.
            If no file name is supplied, the configuration for the calling application will be managed.
            </summary>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="pathToConfigFile">Path to executable for which the configuration items will be read or modified.</param>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.CreateCustomConfigFile(System.String,System.Boolean)">
            <summary>
            Routine creates a custom configuration file containing one default setting.
            </summary>
            <param name="customConfigFilePath">Path for the new file.</param>
            <param name="overwriteExistingFile">If true if file with same name exists then existing file will be deleted and a new file created.
             If false and file with same name exists, an error will be thrown.</param>
            <returns>True if file is created; otherwise false.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetConfigValue(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>String value if key found; otherwise an empty string is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetStringValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>String value if key found; otherwise an empty string is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetStringValueFromConfigFile(System.String,System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="psDefaultValue">Value to return if key not found.</param>
            <returns>String value if key found; otherwise an psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetBooleanValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Boolean value defined by the key if key is found; otherwise false is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetBooleanValueFromConfigFile(System.String,System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="psDefaultValue">Value to return if key not found.</param>
            <returns>Boolean value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetIntValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Int value defined by the key if key is found; otherwise 0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetIntValueFromConfigFile(System.String,System.Int32)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Int value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetLongValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Long value defined by the key if key is found; otherwise 0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetLongValueFromConfigFile(System.String,System.Int64)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Long value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetFloatValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Float value defined by the key if key is found; otherwise 0.0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetFloatValueFromConfigFile(System.String,System.Single)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Float value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetDoubleValueFromConfigFile(System.String)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <returns>Double value defined by the key if key is found; otherwise 0.0 is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetDoubleValueFromConfigFile(System.String,System.Double)">
            <summary>
            Retrieves application configuration value for specified key.
            </summary>
            <param name="psKey">Configuration key to search for.</param>
            <param name="pnDefaultValue">Value to return if key not found.</param>
            <returns>Double value defined by the key if key is found; otherwise psDefaultValue is returned.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetAllAppSettings">
            <summary>
            Retrieves all the app settings in the application configuration file.
            </summary>
            <returns>Collection containing all the application settings defined in the application configuration file.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.GetAllAppSettings(System.String)">
            <summary>
            Retrieves the app settings for the executable specified in the psExecutableFilePath parameter.
            </summary>
            <param name="psExecutableFilePath">Path to executable file.</param>
            <returns>Collection containing all the application settings defined in the application configuration file for the specified executable file.</returns>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.SetConfigValue(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElement">Key/Value pair.</param>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.SetConfigValue(System.Collections.Generic.KeyValuePair{System.String,System.String}[])">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElements">Array of Key/Value pairs.</param>
        </member>
        <member name="M:AppGlobals.CustomAppConfig.SetConfigValue(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Modifies the configuration key specified in the parameter.
            </summary>
            <param name="configElements">Collection of Key/Value pairs.</param>
        </member>
        <member name="T:AppGlobals.ByteUnits">
            <summary>
            Enumerates various byte count descriptions.
            </summary>
        </member>
        <member name="T:AppGlobals.AppNumberGlobals">
            <summary>
            Class contains various methods for converted numbers between different formats.
            </summary>
        </member>
        <member name="M:AppGlobals.AppNumberGlobals.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AppGlobals.AppNumberGlobals.ConvertByteUnits(System.Double,AppGlobals.ByteUnits,AppGlobals.ByteUnits)">
            <summary>
            Use this to convert a number from one unit of byte measuremen to another. For example, convert from bytes to kilobytes or vice versa.
             For example, double result = ConvertByteUnits(2048.0, ByteUnits.Bytes, ByteUnits.Kilobytes) returns 2.0 (i.e. 2KB).
            </summary>
            <param name="fromNumber">Number to convert.</param>
            <param name="fromByteUnits">Current unit of measurement.</param>
            <param name="toByteUnits">Desired unit of measurement.</param>
            <returns>Revised number in new unit of measurement.</returns>
        </member>
        <member name="M:AppGlobals.AppNumberGlobals.GetEnumValues(System.Type)">
            <summary>
            Function returns a dictionary list containing all the elements of the specified et (enum type).
            </summary>
            <param name="et">The enum type to process.</param>
            <returns>Dictionary list containing an int representing the integer value of the enum element and string representing the descriptive name of the enum element.</returns>
        </member>
        <member name="T:AppGlobals.ModelessPopupDialog">
            <summary>
            Class to manage display of modeless dialog form.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.#ctor(System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="maxSecondsToDisplayPopup">Specifies number of seconds to display the message before closing the dialog form automatically.</param>
            <remarks>Leave blank or specify 0 to disable automatic close.</remarks>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.Show">
            <summary>
            Opens a modeless dialog box and displays the text specified in the parameter.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.Show(System.String)">
            <summary>
            Opens a modeless dialog box and displays the text specified in the parameter.
            </summary>
            <param name="messageToShow">Message to display on the form.</param>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.Show(System.String,System.String)">
            <summary>
            Opens a modeless dialog box and displays the text specified in the parameter.
            </summary>
            <param name="messageToShow">Message to display on the form.</param>
            <param name="buttonLabel">Label to display on the form's button. Default is Cancel.</param>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.Close">
            <summary>
            Closes the modeless popup form.
            </summary>
        </member>
        <member name="M:AppGlobals.ModelessPopupDialog.SetFocusToPopup">
            <summary>
            Set focus to modeless popup's action button.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialog.MaxSecondsToDisplayPopup">
            <summary>
            Max number of seconds to display the message before closing the dialog form automatically.
            If set to 0 or a negative number, dialog will not close automatically. Calling module will have to explicitly close the form.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialog.Frm">
            <summary>
            Provides access to the properties of the underlying Windows Form.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialog.Message">
            <summary>
            Message to be displayed.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialog.ButtonLabel">
            <summary>
            Level for the form's button.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialog.IsVisible">
            <summary>
            Returns true if the popup form is currently visible.
            </summary>
        </member>
        <member name="P:AppGlobals.ModelessPopupDialog.ActionButtonPressed">
            <summary>
            If true, then the action button for the modeless popup dialog has been pressed. (For example, Cancel button is pressed.)
            </summary>
        </member>
        <member name="T:System.Windows.Forms.MessageBoxManager">
            <summary>
            Class was originally copied from code on the CodeProject website.
            See http://www.codeproject.com/Articles/18399/Localizing-System-MessageBox
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.OK">
            <summary>
            OK text
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.Cancel">
            <summary>
            Cancel text
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.Abort">
            <summary>
            Abort text
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.Retry">
            <summary>
            Retry text
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.Ignore">
            <summary>
            Ignore text
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.Yes">
            <summary>
            Yes text
            </summary>
        </member>
        <member name="F:System.Windows.Forms.MessageBoxManager.No">
            <summary>
            No text
            </summary>
        </member>
        <member name="M:System.Windows.Forms.MessageBoxManager.Register">
            <summary>
            Enables MessageBoxManager functionality
            </summary>
            <remarks>
            MessageBoxManager functionality is enabled on current thread only.
            Each thread that needs MessageBoxManager functionality has to call this method.
            </remarks>
        </member>
        <member name="M:System.Windows.Forms.MessageBoxManager.Unregister">
            <summary>
            Disables MessageBoxManager functionality
            </summary>
            <remarks>
            Disables MessageBoxManager functionality on current thread only.
            </remarks>
        </member>
    </members>
</doc>
